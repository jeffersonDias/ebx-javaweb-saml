https://www.sslshopper.com/article-most-common-openssl-commands.html
https://www.tbs-certificats.com/FAQ/fr/288.html
https://fr.wikipedia.org/wiki/X.509
https://blog.netspi.com/attacking-sso-common-saml-vulnerabilities-ways-find/

https://www.ssl.com/how-to/create-a-pfx-p12-certificate-file-using-openssl/
https://docs.spring.io/autorepo/docs/spring-security-saml/1.0.x/reference/html/security.html

https://idp.ssocircle.com/sso/hos/CertStatus.jsp

https://idp.ssocircle.com/sso/hos/CSRpkcs.jsp

    openssl req -out CSR.csr -new -newkey rsa:2048 -nodes -keyout mick.key

    The Subject of the Certificate Signing Request is not valid. It must look like 
    CN=<your ssocircle username>,E=<your username>@ssocircle.com,O=ssocircle,C=DE

    cat CSR.csr
    send to ssocircle
    then download cert: user.crt (it is a PEM file)

CONVERTIR mes certificats au format pkcs12 pour mon keystore java
    openssl pkcs12 -export -inkey votre_clef_privee.key  -in resultat.pem -name mon_nom -out resultat_final.pfx
    openssl pkcs12 -export -inkey mick.key  -in user.crt -name mick -out mick.pfx

    The! World# Is& Yours$


IMPORTER mick.pfx dans le .jks
keytool -importkeystore -srckeystore mick.pfx -srcstoretype PKCS12 -srcstorepass "The! World# Is& Yours$" \
    -alias mick -destkeystore samlKeystore.jks -destalias mick \
    -destkeypass nalle123


=== view .pem
openssl x509 -in user.crt -noout -text

=== view .der
openssl x509 -text -noout -inform DER -in user.crt

=== list keystore pkcs12
keytool -list -v -keystore mick.pfx -storetype PKCS12


=== download chrome extension https://chrome.google.com/webstore/detail/saml-chrome-panel/paijfdbeoenhembfhkhllainmocckace
	then look at new SAML tab in developer console


==== view SAML Request blob urldecoded
echo "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6
cHJvdG9jb2wiIElEPSJzMjEzZGUyOGU1MTk4MDYyNDQ5ZDRjMWM1ZDM5ZDkxMDM2NjUzYjdmMzki
IEluUmVzcG9uc2VUbz0iYTJnZDIwYThhMmZqajBkZzMxNWNmaTE3N2YyN2VnNyIgVmVyc2lvbj0i
Mi4wIiBJc3N1ZUluc3RhbnQ9IjIwMTgtMTAtMjJUMTQ6NDU6MjhaIiBEZXN0aW5hdGlvbj0iaHR0
cDovL2xvY2FsaG9zdDo4MDgwL3NhbWwvc2FtbC9TU08iPjxzYW1sOklzc3VlciB4bWxuczpzYW1s
PSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIj5odHRwczovL2lkcC5zc29j
aXJjbGUuY29tPC9zYW1sOklzc3Vlcj48c2FtbHA6U3RhdHVzIHhtbG5zOnNhbWxwPSJ1cm46b2Fz
aXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiPgo8c2FtbHA6U3RhdHVzQ29kZSB4bWxuczpz
YW1scD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnByb3RvY29sIiBWYWx1ZT0idXJuOm9h
c2lzOm5hbWVzOnRjOlNBTUw6Mi4wOnN0YXR1czpTdWNjZXNzIj4KPC9zYW1scDpTdGF0dXNDb2Rl
Pgo8L3NhbWxwOlN0YXR1cz48c2FtbDpBc3NlcnRpb24geG1sbnM6c2FtbD0idXJuOm9hc2lzOm5h
bWVzOnRjOlNBTUw6Mi4wOmFzc2VydGlvbiIgSUQ9InMyZDY2YThjZDMwZjI1NmYzNmZjMjUwZTFl
MjUwYjk2ZDAxODcyNTkyZCIgSXNzdWVJbnN0YW50PSIyMDE4LTEwLTIyVDE0OjQ1OjI4WiIgVmVy
c2lvbj0iMi4wIj4KPHNhbWw6SXNzdWVyPmh0dHBzOi8vaWRwLnNzb2NpcmNsZS5jb208L3NhbWw6
SXNzdWVyPjxkczpTaWduYXR1cmUgeG1sbnM6ZHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkv
eG1sZHNpZyMiPgo8ZHM6U2lnbmVkSW5mbz4KPGRzOkNhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxn
b3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiLz4KPGRzOlNp
Z25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNp
ZyNyc2Etc2hhMSIvPgo8ZHM6UmVmZXJlbmNlIFVSST0iI3MyZDY2YThjZDMwZjI1NmYzNmZjMjUw
ZTFlMjUwYjk2ZDAxODcyNTkyZCI+CjxkczpUcmFuc2Zvcm1zPgo8ZHM6VHJhbnNmb3JtIEFsZ29y
aXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1
cmUiLz4KPGRzOlRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAv
eG1sLWV4Yy1jMTRuIyIvPgo8L2RzOlRyYW5zZm9ybXM+CjxkczpEaWdlc3RNZXRob2QgQWxnb3Jp
dGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSIvPgo8ZHM6RGlnZXN0
VmFsdWU+VW5qWG5SandBUitlaXk5d1lRSHgvVkhIdXhBPTwvZHM6RGlnZXN0VmFsdWU+CjwvZHM6
UmVmZXJlbmNlPgo8L2RzOlNpZ25lZEluZm8+CjxkczpTaWduYXR1cmVWYWx1ZT4KU3NkZXEySFN6
MjNiZHVZQU9ubHNOTzVSVTdzVC85UUhvTFdvK2FpSlk1aEJyTHBCZVBJVkIvbDhHUEdqYnNObThy
enI3V2x4WnNBSQpnRG1Rb3BFcnJqS1UyRk5ieHlZVDNNMGdMMklsOGc2RGZkRHJyMnkzWEVRcCtv
N0gxS0dZdmhoejhySDlGcEcwQ3F6TkVpNUxlL01xCktrM1FGR2tCczhMdnJBN2M0U3F6ZldGRVZz
MHRnWGdjL0FoQllPS0Q1T1RtWk5WMnMwQ0VUSDh2UjYwdVRjN01nWHVSMDJrOW5XcVIKN01Zczlm
ZUd5VzR0Y0xJMnRNWkFjVTY1ZE1WZmVuT0lGVVFSclEzMUpzVkJSMHdVVzNjb0ZVTFpyd0xmVXE5
dnZjWHFjVWNjYjdlRgp2bUt4UnUxN2pxVGw2UCszRFNCNzNzdEVibFVaMGR5YTRjOW80QT09Cjwv
ZHM6U2lnbmF0dXJlVmFsdWU+CjxkczpLZXlJbmZvPgo8ZHM6WDUwOURhdGE+CjxkczpYNTA5Q2Vy
dGlmaWNhdGU+Ck1JSUVZekNDQWt1Z0F3SUJBZ0lESUFabU1BMEdDU3FHU0liM0RRRUJDd1VBTUM0
eEN6QUpCZ05WQkFZVEFrUkZNUkl3RUFZRFZRUUsKREFsVFUwOURhWEpqYkdVeEN6QUpCZ05WQkFN
TUFrTkJNQjRYRFRFMk1EZ3dNekUxTURNeU0xb1hEVEkyTURNd05ERTFNRE15TTFvdwpQVEVMTUFr
R0ExVUVCaE1DUkVVeEVqQVFCZ05WQkFvVENWTlRUME5wY21Oc1pURWFNQmdHQTFVRUF4TVJhV1J3
TG5OemIyTnBjbU5zClpTNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VL
QW9JQkFRQ0F3V0p5T1loWW1XWkYyVEp2bTFWeVpjY3MKM1pKMFRzTmNvYXpyMnBUV2NZOFdUUmJJ
VjlkMDZ6WWpuZ3ZXaWJ5aXlsZXdHWGNZT05CMTA2Wk5VZE5ncm1GZDUxOTRXc3l4NmJQdgpualpF
RVJueTlMT2Z1d1FhcURZZUtoSTZjK3ZlWEFwbk9mc1kyNnU5THFiOXNnYTlKbkNrVUdSYW9WckFW
TTN5Zmdodi9DZy9RRWcrCkk2U1ZFUzc1dEtkY0xEVHQvRndtQVlERUJWOGw1MmJjTURORitKV3RB
dWV0STkvZFdDQmU5VlRDYXNBcjJGeHcxWllUQWlxR0k5c1cKNGtXUzJBcGVkYnFzZ0gzcXFNbFBB
N3RnOWlLeThZdy9kZUVuMHFRSXg4R2xWblFGcERnekc5aytqd0JvZWJBWWZHdk1jTy9CRFhEMgpw
YldUTitEdmJVUmxBZ01CQUFHamV6QjVNQWtHQTFVZEV3UUNNQUF3TEFZSllJWklBWWI0UWdFTkJC
OFdIVTl3Wlc1VFUwd2dSMlZ1ClpYSmhkR1ZrSUVObGNuUnBabWxqWVhSbE1CMEdBMVVkRGdRV0JC
UWhBbUNld0U3YW9uQXZ5SmZqSW1DUlpEdGNjVEFmQmdOVkhTTUUKR0RBV2dCVEExbkVBKzB6YTZw
cExJdGtPWDV5RXA4Y1FhVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBQWhDNS9Xc0Y5enRKSGdv
Kwp4OUtWOWJxVlMwTW1zZ3BHMjZ5T0FxRll3T1NQbVV1WW1KbUhnbUtHaktyajFmZENJTnR6Y0JI
RkZCQzFtYUdKMzNsTWsyYk0yVEh4CjIyL085M2Y0UkZuRmFiN3QyM2pSRmNGMGFtUVVPc0R2bHRm
Snc3WENhbDhKZGdQVWc2VE5DNEZ5OVhZdjBPQUhjM29EcDN2bDFZajgKLzFxQmc2UmMzOWtlaG1E
NXY4U0tZbXBFN3lGS3hERjFvbDlES0RHL0x2Q2xTdm51VlAwYjRCV2RCQUE5YUpTRnRkTkdnRXZw
RVVxRwprSjFvc0xWcUNNdlNZc1V0SG1hcGFYM2hpTTlSYlgzOGpzU2dzbDQ0UmFyNUlvYzdLWE9P
WkZHZkVLeXlVcXVjWXBqV0NPWEpFTEFWCkF6cDdYVHZBMnE1NXUzMWhPMHc4WXg0dUVRS2xteER1
Wm14cE16NEVXQVJ5akhTQXVES0VXMVJKdlVyNis1dUE5cWVPS3hMaUtOMWoKbzZlV0FjbDZXcjlN
cmVYUjlrRnBTNmtIbGxmZFZTckpFUzRTVDB1aDFKcDRFWWdtaXlNbUZDYlVwS1hpZnBzTldDTERl
bkUzaGxsRgowK3Ezd0lkdSs0UDgyUklNNzFuN3FWZ25EbksyOXduTGhIRGF0OXJrQzYyQ0lib25w
a1ZZbW5SZVgwanplKzd0d1JhbkpPTUNKK2xGCmcxNkJEdkJjRzh1MG4vd0lEa0hIaXRCSTdiVTFr
NmM2RHlkTFErNjloOFNDbzZzTzlZdUQrLzN4QUdLYWQ0SW1aNnZUd2xCNHpEQ3AKdTZZZ1FXb2NX
UlhFK1ZrT2IrUkJmdlA3NTVQVWFMZkw2M0FGVmxwT25FcElpbzUrK1VqTkpSdVB1QUE9CjwvZHM6
WDUwOUNlcnRpZmljYXRlPgo8L2RzOlg1MDlEYXRhPgo8L2RzOktleUluZm8+CjwvZHM6U2lnbmF0
dXJlPjxzYW1sOlN1YmplY3Q+CjxzYW1sOk5hbWVJRCBGb3JtYXQ9InVybjpvYXNpczpuYW1lczp0
YzpTQU1MOjEuMTpuYW1laWQtZm9ybWF0OmVtYWlsQWRkcmVzcyIgTmFtZVF1YWxpZmllcj0iaHR0
cHM6Ly9pZHAuc3NvY2lyY2xlLmNvbSI+bWlja2FlbC5nZXJtZW1vbnRAb3JjaGVzdHJhbmV0d29y
a3MuY29tPC9zYW1sOk5hbWVJRD48c2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uIE1ldGhvZD0idXJu
Om9hc2lzOm5hbWVzOnRjOlNBTUw6Mi4wOmNtOmJlYXJlciI+CjxzYW1sOlN1YmplY3RDb25maXJt
YXRpb25EYXRhIEluUmVzcG9uc2VUbz0iYTJnZDIwYThhMmZqajBkZzMxNWNmaTE3N2YyN2VnNyIg
Tm90T25PckFmdGVyPSIyMDE4LTEwLTIyVDE0OjU1OjI4WiIgUmVjaXBpZW50PSJodHRwOi8vbG9j
YWxob3N0OjgwODAvc2FtbC9zYW1sL1NTTyIvPjwvc2FtbDpTdWJqZWN0Q29uZmlybWF0aW9uPgo8
L3NhbWw6U3ViamVjdD48c2FtbDpDb25kaXRpb25zIE5vdEJlZm9yZT0iMjAxOC0xMC0yMlQxNDoz
NToyOFoiIE5vdE9uT3JBZnRlcj0iMjAxOC0xMC0yMlQxNDo1NToyOFoiPgo8c2FtbDpBdWRpZW5j
ZVJlc3RyaWN0aW9uPgo8c2FtbDpBdWRpZW5jZT51cm46dGVzdDptaWNrYWVsZzpFQlhfU0FNTDwv
c2FtbDpBdWRpZW5jZT4KPC9zYW1sOkF1ZGllbmNlUmVzdHJpY3Rpb24+Cjwvc2FtbDpDb25kaXRp
b25zPgo8c2FtbDpBdXRoblN0YXRlbWVudCBBdXRobkluc3RhbnQ9IjIwMTgtMTAtMjJUMTQ6NDU6
MjJaIiBTZXNzaW9uSW5kZXg9InMyNmViNzg0MTQ5MDI5MThlMzMwMDg2OTEwNjM4OGU5OWRiZWNm
Y2MwMSI+PHNhbWw6QXV0aG5Db250ZXh0PjxzYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPnVybjpv
YXNpczpuYW1lczp0YzpTQU1MOjIuMDphYzpjbGFzc2VzOlBhc3N3b3JkUHJvdGVjdGVkVHJhbnNw
b3J0PC9zYW1sOkF1dGhuQ29udGV4dENsYXNzUmVmPjwvc2FtbDpBdXRobkNvbnRleHQ+PC9zYW1s
OkF1dGhuU3RhdGVtZW50PjxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD48c2FtbDpBdHRyaWJ1dGUg
TmFtZT0iRW1haWxBZGRyZXNzIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcv
MjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPm1pY2thZWwuZ2Vy
bWVtb250QG9yY2hlc3RyYW5ldHdvcmtzLmNvbTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6
QXR0cmlidXRlPjxzYW1sOkF0dHJpYnV0ZSBOYW1lPSJVc2VySUQiPjxzYW1sOkF0dHJpYnV0ZVZh
bHVlIHhtbG5zOnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNp
PSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9Inhz
OnN0cmluZyI+b25taWNrYWVsPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+
PHNhbWw6QXR0cmlidXRlIE5hbWU9IkZpcnN0TmFtZSI+PHNhbWw6QXR0cmlidXRlVmFsdWUgeG1s
bnM6eHM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6
Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5n
Ij5taWNrYWVsPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0
cmlidXRlIE5hbWU9Ikxhc3ROYW1lIj48c2FtbDpBdHRyaWJ1dGVWYWx1ZSB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5v
cmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpzdHJpbmciPm9uPC9zYW1s
OkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PC9zYW1sOkF0dHJpYnV0ZVN0YXRlbWVu
dD48L3NhbWw6QXNzZXJ0aW9uPjwvc2FtbHA6UmVzcG9uc2U+" | base64 --decode

echo "PHNhbWxwOlJlc3BvbnNlIHhtbG5zOnNhbWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6
cHJvdG9jb2wiIElEPSJzMjUxMTU5OWYyZDU5ZWY0OTEwZGQ5OGVhYjZhZjYzNDI4YjIwNWQxYWEi
IEluUmVzcG9uc2VUbz0iYTE2MWFoZWg4N2gwaGc5ZjloN2pkOGc2ZWhhYWVkIiBWZXJzaW9uPSIy
LjAiIElzc3VlSW5zdGFudD0iMjAxOC0xMC0yMlQxNDo1OToxM1oiIERlc3RpbmF0aW9uPSJodHRw
Oi8vbG9jYWxob3N0OjgwODAvc2FtbC9zYW1sL1NTTyI+PHNhbWw6SXNzdWVyIHhtbG5zOnNhbWw9
InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjIuMDphc3NlcnRpb24iPmh0dHBzOi8vaWRwLnNzb2Np
cmNsZS5jb208L3NhbWw6SXNzdWVyPjxzYW1scDpTdGF0dXMgeG1sbnM6c2FtbHA9InVybjpvYXNp
czpuYW1lczp0YzpTQU1MOjIuMDpwcm90b2NvbCI+CjxzYW1scDpTdGF0dXNDb2RlIHhtbG5zOnNh
bWxwPSJ1cm46b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6cHJvdG9jb2wiIFZhbHVlPSJ1cm46b2Fz
aXM6bmFtZXM6dGM6U0FNTDoyLjA6c3RhdHVzOlN1Y2Nlc3MiPgo8L3NhbWxwOlN0YXR1c0NvZGU+
Cjwvc2FtbHA6U3RhdHVzPjxzYW1sOkFzc2VydGlvbiB4bWxuczpzYW1sPSJ1cm46b2FzaXM6bmFt
ZXM6dGM6U0FNTDoyLjA6YXNzZXJ0aW9uIiBJRD0iczIxZGIwMTJkYjcyZDMwY2FkYjc3NGIyZTRl
YWVmMzA1OWIyNDRjNjUxIiBJc3N1ZUluc3RhbnQ9IjIwMTgtMTAtMjJUMTQ6NTk6MTNaIiBWZXJz
aW9uPSIyLjAiPgo8c2FtbDpJc3N1ZXI+aHR0cHM6Ly9pZHAuc3NvY2lyY2xlLmNvbTwvc2FtbDpJ
c3N1ZXI+PGRzOlNpZ25hdHVyZSB4bWxuczpkcz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94
bWxkc2lnIyI+CjxkczpTaWduZWRJbmZvPgo8ZHM6Q2Fub25pY2FsaXphdGlvbk1ldGhvZCBBbGdv
cml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyIvPgo8ZHM6U2ln
bmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2ln
I3JzYS1zaGExIi8+CjxkczpSZWZlcmVuY2UgVVJJPSIjczIxZGIwMTJkYjcyZDMwY2FkYjc3NGIy
ZTRlYWVmMzA1OWIyNDRjNjUxIj4KPGRzOlRyYW5zZm9ybXM+CjxkczpUcmFuc2Zvcm0gQWxnb3Jp
dGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVy
ZSIvPgo8ZHM6VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94
bWwtZXhjLWMxNG4jIi8+CjwvZHM6VHJhbnNmb3Jtcz4KPGRzOkRpZ2VzdE1ldGhvZCBBbGdvcml0
aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNzaGExIi8+CjxkczpEaWdlc3RW
YWx1ZT5LK0Z0VjZJUFNJNjBTOFIrUXRUYWRHTUJLdGM9PC9kczpEaWdlc3RWYWx1ZT4KPC9kczpS
ZWZlcmVuY2U+CjwvZHM6U2lnbmVkSW5mbz4KPGRzOlNpZ25hdHVyZVZhbHVlPgpYN3lsTW81RUsy
aUlpaVBISVRKdWlYQ2tHWnl6WGt4dGxHU3hEZnVFYk52cW5tWFZXdmRkQmZudFhJR0JVOHhDeGlG
OFV0RXM5OWxNCk9pWEdGUkhtci8zZXlLWDRuQUtuNENCMlR3citZODU2cFNDT0NYbCt5V3lobDRn
UWgydEtvQkNweTg5SEx1ekVEd2kzUVpGM3QvY0IKaTh4aDdLaHpBZnpOMVJzcWFCSUIrNTZ1U29Q
c2lFRkR4VVdVMXhiK0l1dDBBNU1ybmhaV0IvUS81ZlRjcWVQTDJpTWpoRGlibVIwcwpCMGVtQ1Z1
MEZ0OGJyWG01U2NvRklhcUNiYXEybUFBQTQxM3RoSlhkRUt3VTRuTHRUY0lqaUFkUDBkN2hONDdv
R0g5ejNwVDZjWXA2CnhDNk1yRUd2aTZ5MzBxSDhVYnNabW9mR21tb1hBTDNlbklKVUxRPT0KPC9k
czpTaWduYXR1cmVWYWx1ZT4KPGRzOktleUluZm8+CjxkczpYNTA5RGF0YT4KPGRzOlg1MDlDZXJ0
aWZpY2F0ZT4KTUlJRVl6Q0NBa3VnQXdJQkFnSURJQVptTUEwR0NTcUdTSWIzRFFFQkN3VUFNQzR4
Q3pBSkJnTlZCQVlUQWtSRk1SSXdFQVlEVlFRSwpEQWxUVTA5RGFYSmpiR1V4Q3pBSkJnTlZCQU1N
QWtOQk1CNFhEVEUyTURnd016RTFNRE15TTFvWERUSTJNRE13TkRFMU1ETXlNMW93ClBURUxNQWtH
QTFVRUJoTUNSRVV4RWpBUUJnTlZCQW9UQ1ZOVFQwTnBjbU5zWlRFYU1CZ0dBMVVFQXhNUmFXUndM
bk56YjJOcGNtTnMKWlM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtB
b0lCQVFDQXdXSnlPWWhZbVdaRjJUSnZtMVZ5WmNjcwozWkowVHNOY29henIycFRXY1k4V1RSYklW
OWQwNnpZam5ndldpYnlpeWxld0dYY1lPTkIxMDZaTlVkTmdybUZkNTE5NFdzeXg2YlB2Cm5qWkVF
Um55OUxPZnV3UWFxRFllS2hJNmMrdmVYQXBuT2ZzWTI2dTlMcWI5c2dhOUpuQ2tVR1Jhb1ZyQVZN
M3lmZ2h2L0NnL1FFZysKSTZTVkVTNzV0S2RjTERUdC9Gd21BWURFQlY4bDUyYmNNRE5GK0pXdEF1
ZXRJOS9kV0NCZTlWVENhc0FyMkZ4dzFaWVRBaXFHSTlzVwo0a1dTMkFwZWRicXNnSDNxcU1sUEE3
dGc5aUt5OFl3L2RlRW4wcVFJeDhHbFZuUUZwRGd6RzlrK2p3Qm9lYkFZZkd2TWNPL0JEWEQyCnBi
V1ROK0R2YlVSbEFnTUJBQUdqZXpCNU1Ba0dBMVVkRXdRQ01BQXdMQVlKWUlaSUFZYjRRZ0VOQkI4
V0hVOXdaVzVUVTB3Z1IyVnUKWlhKaGRHVmtJRU5sY25ScFptbGpZWFJsTUIwR0ExVWREZ1FXQkJR
aEFtQ2V3RTdhb25BdnlKZmpJbUNSWkR0Y2NUQWZCZ05WSFNNRQpHREFXZ0JUQTFuRUErMHphNnBw
TEl0a09YNXlFcDhjUWFUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFBaEM1L1dzRjl6dEpIZ28r
Cng5S1Y5YnFWUzBNbXNncEcyNnlPQXFGWXdPU1BtVXVZbUptSGdtS0dqS3JqMWZkQ0lOdHpjQkhG
RkJDMW1hR0ozM2xNazJiTTJUSHgKMjIvTzkzZjRSRm5GYWI3dDIzalJGY0YwYW1RVU9zRHZsdGZK
dzdYQ2FsOEpkZ1BVZzZUTkM0Rnk5WFl2ME9BSGMzb0RwM3ZsMVlqOAovMXFCZzZSYzM5a2VobUQ1
djhTS1ltcEU3eUZLeERGMW9sOURLREcvTHZDbFN2bnVWUDBiNEJXZEJBQTlhSlNGdGROR2dFdnBF
VXFHCmtKMW9zTFZxQ012U1lzVXRIbWFwYVgzaGlNOVJiWDM4anNTZ3NsNDRSYXI1SW9jN0tYT09a
RkdmRUt5eVVxdWNZcGpXQ09YSkVMQVYKQXpwN1hUdkEycTU1dTMxaE8wdzhZeDR1RVFLbG14RHVa
bXhwTXo0RVdBUnlqSFNBdURLRVcxUkp2VXI2KzV1QTlxZU9LeExpS04xagpvNmVXQWNsNldyOU1y
ZVhSOWtGcFM2a0hsbGZkVlNySkVTNFNUMHVoMUpwNEVZZ21peU1tRkNiVXBLWGlmcHNOV0NMRGVu
RTNobGxGCjArcTN3SWR1KzRQODJSSU03MW43cVZnbkRuSzI5d25MaEhEYXQ5cmtDNjJDSWJvbnBr
VlltblJlWDBqemUrN3R3UmFuSk9NQ0orbEYKZzE2QkR2QmNHOHUwbi93SURrSEhpdEJJN2JVMWs2
YzZEeWRMUSs2OWg4U0NvNnNPOVl1RCsvM3hBR0thZDRJbVo2dlR3bEI0ekRDcAp1NllnUVdvY1dS
WEUrVmtPYitSQmZ2UDc1NVBVYUxmTDYzQUZWbHBPbkVwSWlvNSsrVWpOSlJ1UHVBQT0KPC9kczpY
NTA5Q2VydGlmaWNhdGU+CjwvZHM6WDUwOURhdGE+CjwvZHM6S2V5SW5mbz4KPC9kczpTaWduYXR1
cmU+PHNhbWw6U3ViamVjdD4KPHNhbWw6TmFtZUlEIEZvcm1hdD0idXJuOm9hc2lzOm5hbWVzOnRj
OlNBTUw6MS4xOm5hbWVpZC1mb3JtYXQ6ZW1haWxBZGRyZXNzIiBOYW1lUXVhbGlmaWVyPSJodHRw
czovL2lkcC5zc29jaXJjbGUuY29tIj5taWNrYWVsLmdlcm1lbW9udEBvcmNoZXN0cmFuZXR3b3Jr
cy5jb208L3NhbWw6TmFtZUlEPjxzYW1sOlN1YmplY3RDb25maXJtYXRpb24gTWV0aG9kPSJ1cm46
b2FzaXM6bmFtZXM6dGM6U0FNTDoyLjA6Y206YmVhcmVyIj4KPHNhbWw6U3ViamVjdENvbmZpcm1h
dGlvbkRhdGEgSW5SZXNwb25zZVRvPSJhMTYxYWhlaDg3aDBoZzlmOWg3amQ4ZzZlaGFhZWQiIE5v
dE9uT3JBZnRlcj0iMjAxOC0xMC0yMlQxNTowOToxM1oiIFJlY2lwaWVudD0iaHR0cDovL2xvY2Fs
aG9zdDo4MDgwL3NhbWwvc2FtbC9TU08iLz48L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj4KPC9z
YW1sOlN1YmplY3Q+PHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMTgtMTAtMjJUMTQ6NDk6
MTNaIiBOb3RPbk9yQWZ0ZXI9IjIwMTgtMTAtMjJUMTU6MDk6MTNaIj4KPHNhbWw6QXVkaWVuY2VS
ZXN0cmljdGlvbj4KPHNhbWw6QXVkaWVuY2U+dXJuOnRlc3Q6bWlja2FlbGc6RUJYX1NBTUw8L3Nh
bWw6QXVkaWVuY2U+Cjwvc2FtbDpBdWRpZW5jZVJlc3RyaWN0aW9uPgo8L3NhbWw6Q29uZGl0aW9u
cz4KPHNhbWw6QXV0aG5TdGF0ZW1lbnQgQXV0aG5JbnN0YW50PSIyMDE4LTEwLTIyVDE0OjU5OjA2
WiIgU2Vzc2lvbkluZGV4PSJzMjVkMjEyNjJmYjhjMGY1MjdkMGU4OTU1NmFkM2ZkMDI5YmQ0MjAw
MDEiPjxzYW1sOkF1dGhuQ29udGV4dD48c2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj51cm46b2Fz
aXM6bmFtZXM6dGM6U0FNTDoyLjA6YWM6Y2xhc3NlczpQYXNzd29yZFByb3RlY3RlZFRyYW5zcG9y
dDwvc2FtbDpBdXRobkNvbnRleHRDbGFzc1JlZj48L3NhbWw6QXV0aG5Db250ZXh0Pjwvc2FtbDpB
dXRoblN0YXRlbWVudD48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6QXR0cmlidXRlIE5h
bWU9IkVtYWlsQWRkcmVzcyI+PHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6Ly93
d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIw
MDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj5taWNrYWVsLmdlcm1l
bW9udEBvcmNoZXN0cmFuZXR3b3Jrcy5jb208L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0
dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgTmFtZT0iVXNlcklEIj48c2FtbDpBdHRyaWJ1dGVWYWx1
ZSB4bWxuczp4cz0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0i
aHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhzaTp0eXBlPSJ4czpz
dHJpbmciPm9ubWlja2FlbDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxz
YW1sOkF0dHJpYnV0ZSBOYW1lPSJGaXJzdE5hbWUiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlIHhtbG5z
OnhzPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIgeG1sbnM6eHNpPSJodHRwOi8v
d3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYS1pbnN0YW5jZSIgeHNpOnR5cGU9InhzOnN0cmluZyI+
bWlja2FlbDwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjxzYW1sOkF0dHJp
YnV0ZSBOYW1lPSJMYXN0TmFtZSI+PHNhbWw6QXR0cmlidXRlVmFsdWUgeG1sbnM6eHM9Imh0dHA6
Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3Jn
LzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4c2k6dHlwZT0ieHM6c3RyaW5nIj5vbjwvc2FtbDpB
dHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+
PC9zYW1sOkFzc2VydGlvbj48L3NhbWxwOlJlc3BvbnNlPg==" | base64 --decode